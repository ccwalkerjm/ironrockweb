@model IronRock.Objects.MotorProposal
    

        <fieldset><legend>Vehicle(s) to be Insured</legend>
            <table class="col-md-12">                     
                     <thead><tr style="background-color:whitesmoke">
                         <th class="col-md-1">Registration No.</th>
                         <th class="col-md-2">Make and Model</th>
                         <th class="col-md-2">Chassis & Engine No.</th>
                         <th class="col-md-1">Year of Make</th>
                         <th class="col-md-1">C.C.Rating</th>
                         <th class="col-md-1">Seating</th>
                         <th class="col-md-2">Type of Body</th>
                         <th class="col-md-2">Sum Insured</th></tr>
                     </thead>
                     
                      @for (int x = 0; x <= 1; x++)
                      {                
                     <tr>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].RegistrationNo, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].MakeModel, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].ChassisNo, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].YearOfMake, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].CCRating, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].SeatingCapacity, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].TypeOfBody, new { @class="form-control"})</td>
                        <td>@Html.TextBoxFor(model => model.ListOfVehicles[x].SumInsured, new { @class="form-control"})</td>                        
                     </tr>                   
                      }
                 </table>                           
        </fieldset>
        <br />
        <fieldset><legend>Vehicle(s) Ownership</legend>
        <div class="form-group">            
            <div class="col-md-3">
                @Html.LabelFor(model => model.IsOwnedRegistered, new { @class = "control-label" })
                @Html.CheckBoxFor(model => model.IsOwnedRegistered)
                @Html.ValidationMessageFor(model => model.IsOwnedRegistered)
            </div>
            
            @Html.LabelFor(model => model.OwnerOfVehicle, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.OwnerOfVehicle.FullName, new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.OwnerOfVehicle.FullName)
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.OwnerOfVehicle.Address, new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.OwnerOfVehicle.Address)
            </div>
        </div>

        <div class="form-group">            
            <div class="col-md-3">
                @Html.Label("Vehicle(s) Has Lien", new { @class = "control-label", @For="chkLien" })
                @Html.CheckBox("chkLien", false, new {@class="col-md-2" })               
            </div>
            
            @Html.Label("Lien Holder Name and Address", new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.LienHolder.FullName, new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.LienHolder.FullName)
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.LienHolder.Address, new { @class="form-control"})            
            </div>
        </div>
        </fieldset>
        <br />
        <fieldset><legend>Coverage Required</legend>   
            <div class="form-group col-md-12"> 
                @Html.RadioButtonListFor(model => model.RequiredCoverage, IronRock.Objects.MotorCoverage.Comprehensive.ToSelectListValue())
            </div>                          
        </fieldset>
        <br />
        <fieldset><legend>Specify Intended Vehicle Usage</legend>            
            <div class="form-group col-md-12">                  
                    @Html.CheckBoxListFor(model=>model.RequiredUsage, IronRock.Objects.MotorUsage.CarriageOwnGoodsOnly.ToSelectListValue())             
            </div>
        </fieldset>
        <br />
        <fieldset><legend>Other Particulars</legend>
            <div class="form-group col-md-12">               
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IsTrailerRequired, new { @class = "control-label" })
                    @Html.CheckBoxFor(model => model.IsTrailerRequired)
                    @Html.ValidationMessageFor(model => model.IsTrailerRequired)
                </div>
            </div>

            <div class="form-group">
                 @Html.Label("Vehicle has anti-theft device", new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.CheckBox("chkAntiTheft")               
                </div>

                @Html.LabelFor(model => model.VehicleAntitheftDevice, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.VehicleAntitheftDevice, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.VehicleAntitheftDevice)
                </div>
            </div>

            <div class="form-group">
                 @Html.Label("Proposer Will NOT have Regular Custody ?", new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.CheckBox("chkRegCustody")               
                </div>

                @Html.LabelFor(model => model.VehicleCustodyDetails, new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.VehicleCustodyDetails, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.VehicleCustodyDetails)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Vehicle NOT Garaged at Proposers Home", new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.CheckBox("chkGaragedAtProposer")               
                </div>

                @Html.LabelFor(model => model.VehicleGarageDetail, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.VehicleGarageDetail, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.VehicleGarageDetail)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehicleKeptIn, new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.DropDownList("cboKept", new String[] { "Locked Garage", "Locked Area", "Specify..." }.ToList().Select(x => new SelectListItem { Text=x,Value=x }),null,  new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VehicleKeptIn)
                </div>            
            
                @Html.Label("Location:", new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.VehicleGarageDetail, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.VehicleGarageDetail)
                </div>

            </div>

            <div class="form-group">
                 @Html.Label("Proposer has/had other Insurance", new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.CheckBox("chkNowInsured")               
                </div>

                @Html.LabelFor(model => model.ExistingInsuranceCompany, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ExistingInsuranceCompany, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.ExistingInsuranceCompany)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HasNoClaim, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.HasNoClaim)
                    @Html.ValidationMessageFor(model => model.HasNoClaim)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Proposer IS insured with Insurer", new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.CheckBox("chkHasInsuranceWithUs")               
                </div>

                @Html.LabelFor(model => model.TypeExistingInsuranceWithCompany, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.TypeExistingInsuranceWithCompany, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.TypeExistingInsuranceWithCompany)
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Any Insurer(s) ever Decline/Refuse proposal", new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.DropDownListFor(model=> model.DeclinedOrRefused, IronRock.Objects.InsuranceDeclinedRefused.No.ToSelectList(), new { @class = "form-control" })               
                </div>

                @Html.LabelFor(model => model.DeclinedRefusedDetails, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DeclinedRefusedDetails, new { @class="form-control"})
                    @Html.ValidationMessageFor(model => model.DeclinedRefusedDetails)
                </div>
            </div>
        </fieldset>
       
      